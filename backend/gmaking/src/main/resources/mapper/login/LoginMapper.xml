<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.gmaking.login.dao.LoginDAO">

    <resultMap id="loginResultMap" type="com.project.gmaking.login.vo.LoginVO">
        <id column="USER_ID" property="userId"/>
        <result column="USER_NAME" property="userName"/>
        <result column="USER_EMAIL" property="userEmail"/>
        <result column="IS_EMAIL_VERIFIED" property="isEmailVerified"/>
        <result column="USER_PASSWORD" property="userPassword"/>
        <result column="USER_NICKNAME" property="userNickname"/>
        <result column="IMAGE_ID" property="imageId"/>
        <result column="CHARACTER_ID" property="characterId"/>
        <result column="CREATED_DATE" property="createdDate"/>
        <result column="ROLE" property="role"/>
    </resultMap>

    <select id="selectUserById" resultMap="loginResultMap">
        SELECT
            USER_ID,
            USER_NAME,
            USER_EMAIL,
            IS_EMAIL_VERIFIED,
            USER_PASSWORD,
            USER_NICKNAME,
            IMAGE_ID,
            CHARACTER_ID,
            ROLE,
            CREATED_DATE
        FROM TB_USER
        WHERE USER_ID = #{userId}
    </select>

    <insert id="insertUser" parameterType="com.project.gmaking.login.vo.RegisterRequestVO">
        INSERT INTO TB_USER (
            USER_ID,
            USER_NAME,
            USER_EMAIL,
            IS_EMAIL_VERIFIED,
            USER_PASSWORD,
            USER_NICKNAME,
            ROLE
        ) VALUES (
            #{userId},
            #{userName},
            #{userEmail},
            'N',
            #{userPassword},
            #{userNickname},
             'USER'
        )
    </insert>

    <select id="checkDuplicate" resultType="int">
        SELECT
            COUNT(*)
        FROM TB_USER
        WHERE
        <choose>
            <when test="type == 'userId'">USER_ID = #{value}</when>
            <when test="type == 'userNickname'">USER_NICKNAME = #{value}</when>
            <when test="type == 'userEmail'">USER_EMAIL = #{value}</when>
            <otherwise>1 = 0</otherwise>
        </choose>
    </select>

    <delete id="deleteUser">
        DELETE
        FROM TB_USER
        WHERE USER_ID = #{userId}
    </delete>

    <select id="findUserIdByNameAndEmail" resultType="string">
        SELECT USER_ID
        FROM TB_USER
        WHERE USER_NAME = #{userName} AND USER_EMAIL = #{userEmail}
    </select>

    <update id="updatePassword">
        UPDATE TB_USER
        SET USER_PASSWORD = #{newHashedPassword}
        WHERE USER_ID = #{userId}
    </update>

    <select id="selectUserBySocialId" resultMap="loginResultMap">
        SELECT
            USER_ID,
            USER_NAME,
            USER_EMAIL,
            IS_EMAIL_VERIFIED,
            USER_PASSWORD,
            USER_NICKNAME,
            IMAGE_ID,
            CHARACTER_ID,
            ROLE,
            CREATED_DATE
        FROM TB_USER
        WHERE USER_ID = #{userId}
    </select>

    <insert id="insertSocialUser" parameterType="com.project.gmaking.login.vo.LoginVO">
        INSERT INTO TB_USER (
            USER_ID,
            USER_NAME,
            USER_EMAIL,
            IS_EMAIL_VERIFIED,
            USER_PASSWORD,
            USER_NICKNAME,
            ROLE
        ) VALUES (
            #{userId},
            #{userName},
            #{userEmail},
            'Y',
            #{userPassword},
            #{userNickname},
            'USER'
        )
    </insert>

</mapper>