spring.application.name=gmaking

# MySQL Data Source Configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://124.58.88.184:3306/project_db?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=team_dev
spring.datasource.password=1111!

# Server
server.port=8080 

# Dev Tools Configuration
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

# JDBC/MyBatis
mybatis.mapper-locations=classpath:/mapper/**/*.xml

# JWT
jwt.secret-key=aStrongSecretKeyForJWTAuthenticationProject
jwt.token-validity-in-seconds=3600

# Spring Mail (SMTP) Configuration for Gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=phyunjae7333@gmail.com
spring.mail.password=ofzoqkynsjsxbinh
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# \uC774\uBA54\uC77C \uC778\uC99D \uCF54\uB4DC \uB9CC\uB8CC \uC2DC\uAC04
email.verification.expiry-seconds=180
# \uC778\uC99D \uC774\uBA54\uC77C \uBC1C\uC1A1 \uC2DC \uBC1C\uC2E0\uC790 \uC774\uB984
email.verification.sender-name=\uAC9C\uB9CC\uC911 \uAD00\uB9AC\uC790

# 500 \uC5D0\uB7EC \uB514\uBC84\uAE45\uC744 \uC704\uD55C \uB85C\uADF8 \uB808\uBCA8 \uC124\uC815
# DB (MyBatis) \uAD00\uB828 \uB85C\uADF8: \uC2E4\uD589\uB41C SQL\uACFC \uD30C\uB77C\uBBF8\uD130\uB97C \uC0C1\uC138\uD788 \uD655\uC778
# \uC0AC\uC6A9\uC790 DAO \uD328\uD0A4\uC9C0\uC758 \uBAA8\uB4E0 \uB85C\uADF8 \uB808\uBCA8\uC744 DEBUG\uB85C \uC124\uC815
logging.level.com.project.gmaking.login.dao=DEBUG

# MyBatis \uD575\uC2EC \uB85C\uAE45\uC744 DEBUG\uB85C \uC124\uC815
logging.level.org.mybatis=DEBUG

# Mail \uAD00\uB828 \uB85C\uADF8: \uC774\uBA54\uC77C \uC804\uC1A1 \uACFC\uC815\uC758 \uC624\uB958\uB97C \uC0C1\uC138\uD788 \uD655\uC778
# Spring Mail \uB85C\uAE45\uC744 DEBUG\uB85C \uC124\uC815
logging.level.org.springframework.mail=DEBUG

logging.level.com.project.gmaking=DEBUG
logging.level.jdbc.sqlonly=DEBUG
logging.level.jdbc.sqltiming=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.servlet=DEBUG
logging.level.org.springframework.web.filter=DEBUG

mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl


##########################################
# 1. Google OAuth2 (OIDC) \uC124\uC815
##########################################
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

##########################################
# 2. Naver OAuth2 \uC124\uC815
##########################################
spring.security.oauth2.client.registration.naver.client-id=tfMB9foYrjqFZ9lh9zaE
spring.security.oauth2.client.registration.naver.client-secret=a5ymrmpUTU
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

##########################################
# 3. Kakao OAuth2 \uC124\uC815
##########################################
spring.security.oauth2.client.registration.kakao.client-id=915a32eafef12fe6b0de99b05a69386c
spring.security.oauth2.client.registration.kakao.client-secret=6UfdJBPx5sbssx2DGuHWJfFRADEGbDJ2
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# OAuth2 \uB9AC\uB2E4\uC774\uB809\uC158 \uC124\uC815(\uC18C\uC15C \uB85C\uADF8\uC778 \uC2E4\uD328 \uC2DC \uC774\uB3D9\uD560 \uC8FC\uC18C)
app.oauth2.redirect-uri=http://localhost:3000